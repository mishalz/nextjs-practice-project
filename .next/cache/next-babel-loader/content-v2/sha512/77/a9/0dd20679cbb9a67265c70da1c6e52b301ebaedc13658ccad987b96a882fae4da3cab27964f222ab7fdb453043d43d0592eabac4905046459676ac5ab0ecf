{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mishalzulfiqar/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetailspage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.meetupData.title,\n    address: props.meetupData.description,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mishal:tuQhuf-xujhy8-mirtuh@cluster0.3z4p3.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db(\"Meetups\");\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    }),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    meetupId\n  } = context.params;\n  const client = await MongoClient.connect(\"mongodb+srv://mishal:tuQhuf-xujhy8-mirtuh@cluster0.3z4p3.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db(\"Meetups\");\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetup = await meetupsCollections.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n}\nexport default MeetupDetailspage;","map":{"version":3,"sources":["/Users/mishalzulfiqar/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetailspage","props","image","meetupData","title","description","getStaticPaths","client","connect","db","meetupsCollections","collection","meetups","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","findOne"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBC,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACE,UAAN,CAAiBE,WAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACE,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,mGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,SAAV,CAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AACA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA5B,EAAwCC,OAAxC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,IAAY;AAC7B,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAAV,OAAP;AACD,KAFM,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAEJ,IAAAA;AAAF,MAAeI,OAAO,CAACL,MAA7B;AACA,QAAMb,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,mGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,SAAV,CAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AACA,QAAMQ,MAAM,GAAG,MAAMT,kBAAkB,CAACgB,OAAnB,CAA2B;AAAEZ,IAAAA,GAAG,EAAEO;AAAP,GAA3B,CAArB;AACA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAEgB;AADP;AADF,GAAP;AAKD;AACD,eAAenB,iBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\nconst MeetupDetailspage = (props) => {\n  return (\n    <MeetupDetail\n      image={props.image}\n      title={props.meetupData.title}\n      address={props.meetupData.description}\n      description={props.meetupData.description}\n    ></MeetupDetail>\n  );\n};\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mishal:tuQhuf-xujhy8-mirtuh@cluster0.3z4p3.mongodb.net/?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db(\"Meetups\");\n\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetups = await meetupsCollections.find({}, { _id: 1 }).toArray();\n\n  client.close();\n  return {\n    paths: meetups.map((meetup) => {\n      return { params: { meetupId: meetup._id.toString() } };\n    }),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const { meetupId } = context.params;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mishal:tuQhuf-xujhy8-mirtuh@cluster0.3z4p3.mongodb.net/?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db(\"Meetups\");\n\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetup = await meetupsCollections.findOne({ _id: meetupId });\n  return {\n    props: {\n      meetupData: meetup,\n    },\n  };\n}\nexport default MeetupDetailspage;\n"]},"metadata":{},"sourceType":"module"}